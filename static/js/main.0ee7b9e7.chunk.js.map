{"version":3,"sources":["App.js","index.js"],"names":["App","localStorageValues","JSON","parse","localStorage","getItem","React","useState","tasks","setTasks","addRef","useRef","searchRef","addDisplay","setAddDisplay","searchDisplay","setSearchDisplay","Container","Search","style","display","type","placeholder","ref","onChange","values","filter","task","content","includes","current","value","name","className","onClick","Tasks","map","Task","newArray","m","id","setItem","stringify","ButtonGroup","Add","onSubmit","e","preventDefault","newTask","Date","getMilliseconds","styled","div","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA6FeA,EAtFH,WAER,IAAMC,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,UACzD,EAA0BC,IAAMC,SAASN,GAAoB,IAA7D,mBAAMO,EAAN,KAAcC,EAAd,KACMC,EAASJ,IAAMK,OAAO,IACtBC,EAAWN,IAAMK,OAAO,IAC9B,EAAqCL,IAAMC,SAAS,QAApD,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAA2CR,IAAMC,SAAS,QAA1D,mBAAOQ,EAAP,KAAuBC,EAAvB,KA2BA,OACI,eAACC,EAAD,WACI,eAACC,EAAD,CAAQC,MAAO,CAACC,QAAO,UAAML,IAA7B,UACA,uBAAOM,KAAK,OAAOC,YAAY,kBAAiBC,IAAKX,EAAWY,SAXnD,WACjB,IAAMC,EAASvB,KAAKC,MAAMC,aAAaC,QAAQ,UAEhDI,EAAUgB,EAAOC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAQC,SAASjB,EAAUkB,QAAQC,cASnE,cAAC,IAAD,CACIC,KAAK,QACLC,UAAU,eACVC,QAAS,kBAAKlB,EAAiB,cAGnC,cAACmB,EAAD,UACK3B,EAAM4B,KAAI,SAACT,GACR,OACI,eAACU,EAAD,WACG,kCAAKV,EAAKC,WACV,cAAC,IAAD,CACAK,UAAU,WACVD,KAAK,QACLE,QAAS,WACL,IAAMI,EAAW9B,EAAMkB,QAAO,SAAAa,GAAC,OAAIA,EAAEC,KAAQb,EAAKa,MAClDpC,aAAaqC,QAAQ,QAAUvC,KAAKwC,UAAUJ,IACjD7B,EAAS6B,QARFX,EAAKa,SAiB5B,eAACG,EAAD,WACI,cAAC,IAAD,CACIX,KAAK,OACLC,UAAU,cACVC,QAAS,kBAAKpB,EAAc,WAEhC,cAAC,IAAD,CACIkB,KAAK,SACLC,UAAU,aACVC,QAAS,kBAAKlB,EAAiB,cAGvC,cAAC4B,EAAD,CAAKzB,MAAO,CAACC,QAAO,UAAMP,IAA1B,SACI,uBAAMgC,SA/DI,SAACC,GACnBA,EAAEC,iBACF,IAAMC,EAAUtC,EAAOoB,QAAQC,MACzBO,EAAQ,sBAAO9B,GAAP,CAAa,CAACgC,IAAG,IAAIS,MAAOC,kBAAoBtB,QAAQoB,KACtE5C,aAAaqC,QAAQ,QAAUvC,KAAKwC,UAAUJ,IAC9C7B,EAAS6B,GACT5B,EAAOoB,QAAQC,MAAQ,GACvBjB,EAAc,SAwDN,UACA,uBAAOO,KAAK,OAAOC,YAAY,eAAeC,IAAKb,IACnD,kDASVO,EAAYkC,IAAOC,IAAV,wRAaTlC,EAASiC,IAAOC,IAAV,wxBAsCNjB,EAAQgB,IAAOC,IAAV,qQAaLf,EAAMc,IAAOC,IAAT,ipBA6BJT,EAAYQ,IAAOC,IAAR,oWAiBXR,EAAMO,IAAOC,IAAV,88BCvMTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ee7b9e7.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport 'react-fontawesome'\r\nimport FontAwesome from 'react-fontawesome'\r\nimport './index.css';\r\n\r\n\r\nconst App = () => {\r\n    // addding refs and states to project\r\n    const localStorageValues=JSON.parse(localStorage.getItem(\"tasks\"))\r\n    const[tasks , setTasks] = React.useState(localStorageValues||[])\r\n    const addRef = React.useRef(\"\")\r\n    const searchRef= React.useRef(\"\")\r\n    const [addDisplay , setAddDisplay] = React.useState(\"none\");\r\n    const [searchDisplay , setSearchDisplay] = React.useState(\"none\")\r\n\r\n\r\n    // submit function \r\n    // adding new tasks ot page\r\n    // using setTasks to change the data \r\n    // using addRef to get the new tasks\r\n    const submitHandler = (e)=> {\r\n        e.preventDefault()\r\n        const newTask = addRef.current.value;\r\n        const newArray = [...tasks,{id:new Date().getMilliseconds() , content:newTask}]\r\n        localStorage.setItem(\"tasks\" , JSON.stringify(newArray))\r\n        setTasks(newArray);\r\n        addRef.current.value = \"\";\r\n        setAddDisplay(\"none\")\r\n        \r\n    }\r\n    // controlling search input\r\n\r\n    const changeHandler= ()=>{\r\n        const values = JSON.parse(localStorage.getItem(\"tasks\"))\r\n      \r\n       setTasks( values.filter(task => task.content.includes(searchRef.current.value) ))\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n        <Container>\r\n            <Search style={{display : `${searchDisplay}`}}>\r\n            <input type=\"text\" placeholder=\"search for task\"ref={searchRef} onChange={changeHandler}/>\r\n            <FontAwesome \r\n                name=\"close\"\r\n                className=\"close-search\"\r\n                onClick={()=> setSearchDisplay(\"none\")}\r\n            />\r\n            </Search>\r\n            <Tasks>\r\n                {tasks.map((task)=> {\r\n                    return (\r\n                        <Task key={task.id}>\r\n                           <p> {task.content}</p>\r\n                           <FontAwesome \r\n                           className=\"task-end\"\r\n                           name=\"close\"\r\n                           onClick={()=> {\r\n                               const newArray = tasks.filter(m => m.id !==  task.id)\r\n                               localStorage.setItem(\"tasks\" , JSON.stringify(newArray))\r\n                            setTasks(newArray)\r\n                            \r\n                           }}\r\n                           \r\n                           />\r\n                        </Task>\r\n                    )\r\n                })}\r\n            </Tasks>\r\n            <ButtonGroup>\r\n                <FontAwesome \r\n                    name=\"plus\"\r\n                    className=\"add-new-btn\"\r\n                    onClick={()=> setAddDisplay(\"flex\")}\r\n                />\r\n                <FontAwesome \r\n                    name=\"search\"\r\n                    className=\"search-btn\"\r\n                    onClick={()=> setSearchDisplay(\"flex\")}\r\n                />\r\n            </ButtonGroup>\r\n            <Add style={{display : `${addDisplay}`}}>\r\n                <form onSubmit={submitHandler}>\r\n                <input type=\"text\" placeholder=\"add new task\" ref={addRef} />\r\n                <button>add</button>\r\n                </form>\r\n            </Add>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nconst Container = styled.div`\r\n    position:relative;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-between;\r\n    width:100vw;\r\n    height:100vh;\r\n    overflow:hidden;\r\n    background:url(./Image/background.jpg);\r\n    baackgorund-size:100% 100%;\r\n    \r\n\r\n`\r\nconst Search = styled.div`\r\n    position:absolute;\r\n    width:100vw;\r\n    height:35px;\r\n    margin:auto;\r\n    justify-content:center;\r\n    padding-top:50px;\r\n    z-index:1;\r\n    input{\r\n        height:28px;\r\n        width:300px;\r\n        border:none;\r\n        border-radius:15px;\r\n        outline:none;\r\n        padding-left:15px;\r\n        opacity:0.9;\r\n\r\n    }\r\n    .close-search{\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        width:35px;\r\n        height:35px;\r\n        font-size:20px;\r\n        color:#cccccc;\r\n        background-color:black;\r\n        opacity:0.8;\r\n        cursor:pointer;\r\n        border-radius:50%;\r\n        margin-left:15px;\r\n    }\r\n    .close-search:hover{\r\n        background:none;\r\n        font-size:25px;\r\n    }\r\n    \r\n`\r\nconst Tasks = styled.div`\r\n    width:100%;\r\n    height:80vh;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    padding-top:15%;\r\n    overflow-y:auto;\r\n    @media only screen and (max-width:600px){\r\n        padding-top:30%;\r\n    }\r\n\r\n`\r\nconst Task =styled.div`\r\n    position:relative;\r\n    display:felx;\r\n    background-color:#c1c1c1;\r\n    width:60%;\r\n    margin:10px 0;\r\n    padding:10px;\r\n    justify-content:space-between;\r\n    border-radius:15px;\r\n    .task-end{\r\n        background:rgba(210 ,15 , 0 , 0.8);\r\n        color:white;\r\n        height:100%;\r\n        position:absolute;\r\n        right:0;\r\n        top:0;\r\n        width:50px;\r\n        border-radius:15px;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        font-size:19px;\r\n        cursor:pointer;\r\n        :hover{\r\n            background:rgba(210 , 15 , 0 , 0.6);\r\n        }\r\n    }\r\n\r\n`\r\nconst ButtonGroup=styled.div`\r\n    width:100vw;\r\n    height:100px;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:flex-start;\r\n    span{\r\n        font-size:25px;\r\n        margin:5px;\r\n        padding:10px;\r\n        border-radius:5px;\r\n        color:#cccccc;\r\n        background:rgba(18 , 180 , 65 , 1);\r\n        cursor:pointer\r\n    }\r\n    \r\n`\r\nconst Add = styled.div`\r\n    position:absolute;\r\n    width:100vw;\r\n    height:100vh;\r\n    background:rgba(0,0,0,0.8);\r\n    align-items:center;\r\n    justify-content:center;\r\n    z-index:10;\r\n    form{\r\n        display:flex;\r\n        flex-direction:column;\r\n        max-width:600px;\r\n        width:60%;\r\n        @media only screen and (max-width:768px){\r\n            width:90%\r\n        }\r\n        input{\r\n            height:90px;\r\n            margin-bottom:20px;\r\n            ouline:none;\r\n            :focus{\r\n                outline:none\r\n            }\r\n            \r\n\r\n        }\r\n        button{\r\n            height:30px;\r\n            background:rgba(25 , 85 , 310 , 1);\r\n            border:none;\r\n            border-radius:25px;\r\n            color:whitesmoke;\r\n            font-size:21px;\r\n            text-transform:upperCase;\r\n            cursor:pointer;\r\n            :hover{\r\n                background:rgba(25 , 85 , 310 , 0.6);\r\n            }\r\n        }\r\n    }\r\n\r\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}